``0-add_integer`` module
=========================

Using ``add_integer``
---------------------

Importing the function from the module:
    >>> add_integer = __import__("0-add_integer").add_integer

Check for the module docstring:
    >>> m = __import__("0-add_integer").__doc__
    >>> len(m) > 1
    True

Checking for function docstring:
    >>> f = __import__("0-add_integer").add_integer.__doc__
    >>> len(f) > 1
    True

Testing:
    >>> add_integer(2, 3)
    5

    >>> add_integer(100, -3)
    97

    >>> add_integer(2)
    100

    >>> add_integer(99.1, -1)
    98

    >>> add_integer(5, 7.8)
    12

    >>> add_integer(2.45, 3.1)
    5

    >>> add_integer(1, float('nan'))
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer or float

    >>> add_integer(4, "School")
    Traceback (most recent call last):
    ...
    TypeError: b must be an integer

    >>> add_integer("School", 4)
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer

    >>> add_integer(1, 2, 3)
    Traceback (most recent call last):
    ...
    TypeError: add_integer() takes 2 positional arguments but 3 were given

    >>> add_integer(None)
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer or float

